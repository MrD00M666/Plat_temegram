from telegram import Update, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import json

BOT_TOKEN = '7901489953:AAHojbrC2xHbeQ7Wvj9jEtQaV0ceVlfCslI'
WEBAPP_URL = 'https://mrd00m666.github.io/Plat_temegram/'

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã"""
    await update.message.reply_text(
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!",
        reply_markup={
            "inline_keyboard": [[{
                "text": "üéÆ –ò–≥—Ä–∞—Ç—å",
                "web_app": {"url": WEBAPP_URL}
            }]]
        }
    )

async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        data = json.loads(update.message.web_app_data.data)
        if data.get('action') == 'saveScore':
            score = data.get('score', 0)
            await update.message.reply_text(f"üéâ –ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥: {score}!")
    except Exception as e:
        print(f"Error handling webapp data: {e}")

def main():
    application = Application.builder().token(BOT_TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))
    
    application.run_polling()

if __name__ == '__main__':
    main() 